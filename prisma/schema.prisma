generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model fire_department {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String             @db.VarChar(255)
  description      String?            @db.VarChar(255)
  image            String?            @db.VarChar(255)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  user_id          String             @db.Uuid
  tenant_id        String             @db.VarChar(255)
  user             user               @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  incident         incident[]
  resource         resource[]
  training_program training_program[]
}

model incident {
  id                 String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String              @db.VarChar(255)
  status             String              @db.VarChar(255)
  fire_department_id String              @db.Uuid
  created_at         DateTime            @default(now()) @db.Timestamp(6)
  updated_at         DateTime            @default(now()) @db.Timestamp(6)
  fire_department    fire_department     @relation(fields: [fire_department_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  incident_resource  incident_resource[]
}

model incident_resource {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  incident_id String   @db.Uuid
  resource_id String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  incident    incident @relation(fields: [incident_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  resource    resource @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model resource {
  id                 String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String              @db.VarChar(255)
  fire_department_id String              @db.Uuid
  created_at         DateTime            @default(now()) @db.Timestamp(6)
  updated_at         DateTime            @default(now()) @db.Timestamp(6)
  incident_resource  incident_resource[]
  fire_department    fire_department     @relation(fields: [fire_department_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model training_program {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                  String                  @db.VarChar(255)
  status                String                  @db.VarChar(255)
  fire_department_id    String                  @db.Uuid
  created_at            DateTime                @default(now()) @db.Timestamp(6)
  updated_at            DateTime                @default(now()) @db.Timestamp(6)
  fire_department       fire_department         @relation(fields: [fire_department_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_training_program user_training_program[]
}

model user {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                 String                  @unique @db.VarChar(255)
  firstName             String?                 @db.VarChar(255)
  lastName              String?                 @db.VarChar(255)
  roq_user_id           String                  @db.VarChar(255)
  tenant_id             String                  @db.VarChar(255)
  created_at            DateTime                @default(now()) @db.Timestamp(6)
  updated_at            DateTime                @default(now()) @db.Timestamp(6)
  fire_department       fire_department[]
  user_training_program user_training_program[]
}

model user_training_program {
  id                  String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id             String           @db.Uuid
  training_program_id String           @db.Uuid
  created_at          DateTime         @default(now()) @db.Timestamp(6)
  updated_at          DateTime         @default(now()) @db.Timestamp(6)
  training_program    training_program @relation(fields: [training_program_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                user             @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
